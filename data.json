{"coverage": 40.888888888888886, "raw_data": {"meta": {"format": 3, "version": "7.6.4", "timestamp": "2024-12-23T18:16:12.872577", "branch_coverage": false, "show_contexts": false}, "files": {"src/__init__.py": {"executed_lines": [0, 1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": [], "functions": {"": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "classes": {"": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}}, "src/seqabpy/__init__.py": {"executed_lines": [1, 3, 4, 6], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": [], "functions": {"": {"executed_lines": [1, 3, 4, 6], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "classes": {"": {"executed_lines": [1, 3, 4, 6], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}}, "src/seqabpy/gatsby.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 12, 47, 48, 49, 67, 70, 80, 81, 82, 93, 140, 147, 148, 149, 150, 151, 152, 155, 157, 177, 180, 185, 190, 191, 196, 197, 200, 201, 204, 209, 212, 213, 311, 346, 348, 350, 354, 356, 360, 365, 370, 372, 381, 414, 419, 424, 426, 429, 430, 431, 433, 440, 441, 442, 443, 444, 445, 448, 451, 455, 459, 474, 488, 497, 498, 499, 501, 503, 504, 508, 509, 511], "summary": {"covered_lines": 79, "num_statements": 170, "percent_covered": 46.470588235294116, "percent_covered_display": "46", "missing_lines": 91, "excluded_lines": 0}, "missing_lines": [50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 83, 84, 88, 166, 167, 168, 169, 170, 171, 174, 202, 216, 219, 222, 225, 226, 229, 230, 233, 235, 236, 237, 238, 242, 243, 245, 246, 247, 251, 258, 259, 260, 263, 264, 266, 267, 272, 273, 276, 277, 278, 279, 280, 287, 292, 293, 295, 298, 299, 301, 303, 308, 347, 349, 351, 355, 357, 361, 415, 421, 422, 425, 427, 452, 456, 460, 461, 462, 470, 471, 476, 477, 479, 480, 484, 485, 486, 491], "excluded_lines": [], "functions": {"alpha_spending_function": {"executed_lines": [47, 48, 49, 67], "summary": {"covered_lines": 4, "num_statements": 17, "percent_covered": 23.529411764705884, "percent_covered_display": "24", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65], "excluded_lines": []}, "multivariate_norm_cdf": {"executed_lines": [80, 81, 82], "summary": {"covered_lines": 3, "num_statements": 6, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [83, 84, 88], "excluded_lines": []}, "calculate_sequential_bounds": {"executed_lines": [140, 157, 177, 180, 185, 190, 191, 196, 197, 200, 201, 204, 209, 212, 213], "summary": {"covered_lines": 15, "num_statements": 57, "percent_covered": 26.31578947368421, "percent_covered_display": "26", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [202, 216, 219, 222, 225, 226, 229, 230, 233, 235, 236, 237, 238, 242, 243, 245, 246, 247, 251, 258, 259, 260, 263, 264, 266, 267, 272, 273, 276, 277, 278, 279, 280, 287, 292, 293, 295, 298, 299, 301, 303, 308], "excluded_lines": []}, "calculate_sequential_bounds.calculate_upper_bound": {"executed_lines": [147, 148, 149, 150, 151, 152, 155], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "calculate_sequential_bounds.calculate_lower_bound": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 7, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [166, 167, 168, 169, 170, 171, 174], "excluded_lines": []}, "ldBounds": {"executed_lines": [346, 348, 350, 354, 356, 360, 365, 370, 372], "summary": {"covered_lines": 9, "num_statements": 15, "percent_covered": 60.0, "percent_covered_display": "60", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [347, 349, 351, 355, 357, 361], "excluded_lines": []}, "GST": {"executed_lines": [414, 419, 424, 426, 429, 430, 431, 433, 451, 455, 459, 474, 488, 497, 498, 499, 501, 503, 504, 508, 509, 511], "summary": {"covered_lines": 22, "num_statements": 42, "percent_covered": 52.38095238095238, "percent_covered_display": "52", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [415, 421, 422, 425, 427, 452, 456, 460, 461, 462, 470, 471, 476, 477, 479, 480, 484, 485, 486, 491], "excluded_lines": []}, "GST.calculate_upper_bound": {"executed_lines": [440, 441, 442, 443, 444, 445, 448], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 12, 70, 93, 311, 381], "summary": {"covered_lines": 12, "num_statements": 12, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "classes": {"": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 12, 47, 48, 49, 67, 70, 80, 81, 82, 93, 140, 147, 148, 149, 150, 151, 152, 155, 157, 177, 180, 185, 190, 191, 196, 197, 200, 201, 204, 209, 212, 213, 311, 346, 348, 350, 354, 356, 360, 365, 370, 372, 381, 414, 419, 424, 426, 429, 430, 431, 433, 440, 441, 442, 443, 444, 445, 448, 451, 455, 459, 474, 488, 497, 498, 499, 501, 503, 504, 508, 509, 511], "summary": {"covered_lines": 79, "num_statements": 170, "percent_covered": 46.470588235294116, "percent_covered_display": "46", "missing_lines": 91, "excluded_lines": 0}, "missing_lines": [50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 83, 84, 88, 166, 167, 168, 169, 170, 171, 174, 202, 216, 219, 222, 225, 226, 229, 230, 233, 235, 236, 237, 238, 242, 243, 245, 246, 247, 251, 258, 259, 260, 263, 264, 266, 267, 272, 273, 276, 277, 278, 279, 280, 287, 292, 293, 295, 298, 299, 301, 303, 308, 347, 349, 351, 355, 357, 361, 415, 421, 422, 425, 427, 452, 456, 460, 461, 462, 470, 471, 476, 477, 479, 480, 484, 485, 486, 491], "excluded_lines": []}}}, "src/seqabpy/gavi.py": {"executed_lines": [1, 3, 6, 7, 15, 44, 76, 106, 133, 157], "summary": {"covered_lines": 9, "num_statements": 51, "percent_covered": 17.647058823529413, "percent_covered_display": "18", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 41, 42, 58, 59, 61, 63, 67, 70, 73, 74, 95, 96, 97, 98, 100, 103, 104, 122, 125, 127, 130, 131, 144, 145, 147, 148, 149, 152, 153, 154, 190, 191, 192, 193, 195, 196, 204, 207], "excluded_lines": [], "functions": {"AlwaysValidInference.__init__": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 41, 42], "excluded_lines": []}, "AlwaysValidInference.GAVI": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [58, 59, 61, 63, 67, 70, 73, 74], "excluded_lines": []}, "AlwaysValidInference.mSPRT": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 7, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [95, 96, 97, 98, 100, 103, 104], "excluded_lines": []}, "AlwaysValidInference.StatSig_SPRT": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [122, 125, 127, 130, 131], "excluded_lines": []}, "AlwaysValidInference.statsig_alpha_corrected_v1": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [144, 145, 147, 148, 149, 152, 153, 154], "excluded_lines": []}, "sequential_p_value": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [190, 191, 192, 193, 195, 196, 204, 207], "excluded_lines": []}, "": {"executed_lines": [1, 3, 6, 7, 15, 44, 76, 106, 133, 157], "summary": {"covered_lines": 9, "num_statements": 9, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "classes": {"AlwaysValidInference": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 34, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 41, 42, 58, 59, 61, 63, 67, 70, 73, 74, 95, 96, 97, 98, 100, 103, 104, 122, 125, 127, 130, 131, 144, 145, 147, 148, 149, 152, 153, 154], "excluded_lines": []}, "": {"executed_lines": [1, 3, 6, 7, 15, 44, 76, 106, 133, 157], "summary": {"covered_lines": 9, "num_statements": 17, "percent_covered": 52.94117647058823, "percent_covered_display": "53", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [190, 191, 192, 193, 195, 196, 204, 207], "excluded_lines": []}}}}, "totals": {"covered_lines": 92, "num_statements": 225, "percent_covered": 40.888888888888886, "percent_covered_display": "41", "missing_lines": 133, "excluded_lines": 0}}, "coverage_path": "."}